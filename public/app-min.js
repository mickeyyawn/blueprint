var utils={s4:function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)},guid:function(){return utils.s4()+utils.s4()+"-"+utils.s4()+"-"+utils.s4()+"-"+utils.s4()+"-"+utils.s4()+utils.s4()+utils.s4()},isSomething:function(t){return void 0!==t&&t!=={}&&""!==t&&null!==t}},ObjectTemplate=function(){var t,n=0,e=function(e){n++;var i=void 0===e?"Unknown":e;t=utils.guid(),this.getId=function(){return t},this.getName=function(){return i},this.setName=function(t){i=t}};return e.instanceCount=function(){return n},e.prototype.announce=function(){console.log("Hello!  My id: "+t)},e}(),TaskModel=function(){var t,n=0,e=function(){this.id=0,this.name="",this.dueDate=moment()},i=function(i,s){n++;var o=void 0===i?"Unknown":i,r=[];t=utils.guid();this.getId=function(){return t},this.initTwenty=function(){for(var t=0;20>t;t++){var n=new e;n.id=utils.guid(),n.name="this is my name : "+t,r.push(n)}postal.publish({channel:"blueprint",topic:"tasks.retrieved",data:r})},this.setName=function(t){o=t}};return i.prototype.createTask=function(){return new e},i}(),TaskController=function(){var t=function(){},n=function(){return moment(this.dueDate).format("MMM Do YYYY h:mm:ss a")},e=function(){console.log("user is wanting to add new task, in controller..."),o()},i=function(){$("#bp-taskview").hide()},s=function(t){Handlebars.registerHelper("dueDateAsString",n);var i=$("#tasks-template").html();i=Handlebars.compile(i),Handlebars.registerPartial("task",$("#task-partial").html());var s=i({tasks:t});$("#content").append(s),$("#add-new-task-button").click(e)},o=function(){i();var t=$("#task-edit-template").html();t=Handlebars.compile(t);var n=t();$("#content").append(n)};return t.prototype.showTasks=function(t){s(t)},t.prototype.hide=i(),t.prototype.show=function(){$("#bp-taskview").show()},t}(),blueprint={models:{},taskController:{},bus:{}};$(document).ready(function(){blueprint.taskController=new TaskController,postal.subscribe({channel:"blueprint",topic:"tasks.retrieved",callback:blueprint.taskController.showTasks}),blueprint.models.tasks=new TaskModel("tasks",blueprint.bus),blueprint.models.tasks.initTwenty()});